import React,{createContext, useContext}from 'react';
// const DataContext = createContext();

// function App(){
//   const data="Hello I am Hari Charan"
//   return(
//     <DataContext.Provider value={data}>
// <User1/>
//     </DataContext.Provider>
//   )
// }
// // user1 compomnent
// function User1({data}){
//   return<User2 />
// }
// function User2({data}){
//   return<User3/>
// }
// function User3({data}){
//   return<User4 />
// }
// function User4(){
//   const data=useContext(DataContext)
//   return<div>{data}</div>
// }
// export default App;

import React, { createContext, useContext } from "react";
const UserContext = createContext();

function App() {
  const user = {
    name: "Hari Charan ",
    email: "reddyharicharan269@gmail.com"
  };

  return (
    <UserContext.Provider value={user}>
      <User1 />
    </UserContext.Provider>
  );
}

function User1() {
  return <User2 />;
}

function User2() {
  return <User3 />;
}

function User3() {
  return <Profile />;
}


function Profile() {
  const user = useContext(UserContext);
  
  return (
    <div>
     <p>Name: {user.name}</p>
      <p>Email: {user.email}</p>
    </div>
  );
}

export default App;

12-02-2025
React Memo:
--it is a HOC(high order component) is not a react hook
--it will stop the unnecessary rendering of functional components of its props
--it will improve the performance of the functional components
#keyword
#suggesrions
#100 product #render



13-02-2025

use Context():
props(properties) in react are used to pass data from parent component to child component

prop drilling is the process of passing data from parent component to deeply (nested) child component through intermediate components, by passing data as props  at each level
